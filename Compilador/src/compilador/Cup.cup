package compilador;
import java_cup.runtime.Symbol;

parser code 
{:
    public String error = "";
    public void syntax_error(Symbol s){
        error += "Error de sintaxis no se esperaba: "+ s.value +", en la linea: "+(s.left+1)+", columna: "+(s.right+1)+"\n";
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("El programa contiene errores sintacticos no puede seguir");
    }
:}; 

terminal ANDOR, OPREL, LOOP, MAIN, FOR, OPTIONS, OPT, DEFOPT, BEGIN, 
    ENDM, ENDO, ENDI, ENDE, ENDF, ENDFU, ENDL, FINLINE, ABRE, CIERRA, HASTA, ASIG, OPMD, OPSR, COMA, RETURN, 
    TYPE, FUNC, IF, ID, ABREPAR, CIERRAPAR, ELSE, PRINT, VALOR, STRING, NOT;

non terminal FUNCION, FUNCION2, DECLARACION, ASIGNACION, IFCOND, ELSECOND, FORCOND,
    LOOPCOND, OPTIONSCOND, MAINCOND, PRINTCOND, OPERACION, CONDICION, 
    CODE, LISTAPARAM, LISTATYPES, DECL, DECL2, OPTT, PRINTER, OP1, 
    OP2, COND1, COND2, COND3, RETORNO;

precedence left OPMD;
precedence left OPSR;
start with MAINCOND;

FUNCION ::=  FUNCION FUNCION2 | ;
FUNCION2 ::= FUNC TYPE ID ABREPAR LISTAPARAM CIERRAPAR BEGIN CODE RETORNO ENDFU;

LISTAPARAM ::= TYPE ID | LISTATYPES COMA TYPE ID | ;

LISTATYPES ::= LISTATYPES COMA TYPE ID | TYPE ID;

MAINCOND ::= FUNCION FUNC MAIN BEGIN CODE RETORNO ENDM;

DECLARACION ::= TYPE DECL FINLINE;

DECL ::= DECL COMA ID DECL2 | ID DECL2;
DECL2 ::= ASIG OPERACION | ;

ASIGNACION ::= ID ASIG OPERACION FINLINE;

IFCOND ::= IF ABREPAR CONDICION CIERRAPAR BEGIN CODE ENDI;

ELSECOND ::= ELSE IF ABREPAR CONDICION CIERRAPAR BEGIN CODE ENDE
             | ELSE BEGIN CODE ENDE;

FORCOND ::= FOR ABREPAR TYPE ID HASTA OPERACION COMA ID OPSR OPSR CIERRAPAR BEGIN CODE ENDF;

LOOPCOND ::= LOOP ABREPAR CONDICION CIERRAPAR BEGIN CODE ENDL;

OPTIONSCOND ::= OPTIONS ABREPAR ID COMA TYPE CIERRAPAR BEGIN OPTT ENDO;

OPTT ::= OPT ABREPAR VALOR CIERRAPAR ABRE CODE CIERRA OPTT | DEFOPT ABRE CODE CIERRA;

PRINTCOND ::= PRINT ABREPAR PRINTER CIERRAPAR FINLINE;

PRINTER ::= OPERACION | STRING;

OPERACION ::= OPERACION OPSR OP1 | OP1;
OP1 ::= OP1 OPMD OP2 | OP2;
OP2 ::= VALOR | ID | ABREPAR OPERACION CIERRAPAR;

CONDICION ::= CONDICION OPREL COND1 | COND1;
COND1 ::= COND1 ANDOR COND2 | COND2;
COND2 ::= COND3 ABREPAR CONDICION CIERRAPAR | VALOR | ID;
COND3 ::= NOT | ; 

CODE ::= DECLARACION CODE | ASIGNACION CODE | IFCOND CODE | IFCOND ELSECOND CODE
         | FORCOND CODE | LOOPCOND CODE | OPTIONSCOND CODE | PRINTCOND CODE | ;

RETORNO ::= RETURN OPERACION FINLINE;


